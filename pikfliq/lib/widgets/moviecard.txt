import 'package:flutter/material.dart';
import 'dart:math' as math;
import 'package:pikfliq/widgets/ActionButtonWidget.dart';
import 'package:pikfliq/widgets/InformationWidget.dart';
import 'package:pikfliq/widgets/PosterWidget.dart';
import 'package:pikfliq/widgets/RatingWidget.dart';
import 'package:pikfliq/widgets/TitleWidget.dart';

class MovieCard extends StatefulWidget {
  final Map<String, dynamic>? movieData;
  final bool isMobile;
  final VoidCallback onFetchMovie;

  const MovieCard({
    Key? key,
    this.movieData,
    this.isMobile = false,
    required this.onFetchMovie,
  }) : super(key: key);

  @override
  _MovieCardState createState() => _MovieCardState();
}

class _MovieCardState extends State<MovieCard> with SingleTickerProviderStateMixin {
  late AnimationController _controller;
  late Animation<double> _flipAnimation;

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(vsync: this, duration: const Duration(milliseconds: 800));
    _flipAnimation = Tween<double>(begin: 0, end: 1).animate(_controller);
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }
    void _flipCard() {
    if (widget.isMobile) {
      if (_isFront()) {
        _controller.forward();
      } else {
        _controller.reverse();
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    if (widget.movieData == null) {
      return Center(child: CircularProgressIndicator());
    }

    return LayoutBuilder(
      builder: (context, constraints) {
        if (widget.isMobile) {
          // Mobile layout
          return _buildMobileLayout();
        } else {
          // Desktop layout
          // Ensure that the layout does not exceed the screen size, avoiding the overflow issue
          return SingleChildScrollView(
            child: ConstrainedBox(
              constraints: BoxConstraints(minHeight: constraints.maxHeight),
              child: IntrinsicHeight(
                child: _buildDesktopLayout(),
              ),
            ),
          );
        }
      },
    );
  }

  Widget _buildMobileLayout() {
    // Implementation for mobile layout

  return GestureDetector(
      onTap: _flipCard,
      child: AnimatedBuilder(
        animation: _flipAnimation,
        builder: (context, child) {
          final isFront = _isFront();
          return Transform(
            alignment: Alignment.center,
            transform: Matrix4.identity()
              ..setEntry(3, 2, 0.001)
              ..rotateY(_flipAnimation.value * math.pi),
            child: isFront
                ? child
                : Transform(
                    alignment: Alignment.center,
                    transform: Matrix4.identity()..rotateY(math.pi),
                    child: InformationWidget(
                      summary: widget.movieData!['overview'] ??
                          'No Overview Available',
                      releaseDate: widget.movieData!['release_date'] ??
                          'No Release Date',
                    ),
                  ),
          );
        },
        child: Column(
          children: [
            TitleWidget(title: widget.movieData!['title'] ?? 'No Title'),
            PosterWidget(imagePath: widget.movieData!['poster_path'] ?? ''),
            RatingBarWidget(
                rating: widget.movieData!['vote_average'].toDouble()),
          ],
        ),
      ),
    );
  }

  // Implementation for desktop layout
  Widget _buildDesktopLayout() {
    return Row(
      children: [
        // Left half of the screen for movie details
        Expanded(
          flex: 1,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Display the movie title at the top
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: TitleWidget(
                    title: widget.movieData!['title'] ?? 'No Title'),
              ),
              // Show the poster in an expanded widget to take up remaining space
              Expanded(
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: PosterWidget(
                      imagePath: widget.movieData!['poster_path'] ?? ''),
                ),
              ),
              // Display the rating at the bottom
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: RatingBarWidget(
                    rating: widget.movieData!['vote_average'].toDouble()),
              ),
            ],
          ),
        ),
        // Vertical Divider to visually separate movie details from the information widget
        VerticalDivider(width: 1, color: Colors.grey),
        // Right half of the screen for additional movie information
        Expanded(
          flex: 1,
          child: SingleChildScrollView(
            // Use SingleChildScrollView to ensure the content is scrollable if it overflows
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: InformationWidget(
                    summary: widget.movieData!['overview'] ?? '',
                    releaseDate: widget.movieData!['release_date'] ?? '',
                  ),
                ),
                // Optionally, include the action button here if it makes sense in your layout
                Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: ActionButtonWidget(onFetchMovie: widget.onFetchMovie),
                ),
              ],
            ),
          ),
        ),
      ],
    );
  }
}
